elements {

    relations {

        ProductProductAvailabilityRelation(source: Product, target: ProductAvailability) {
            source(availabilities) {
                description = "Availabilities"
                containerType = Set
                associated = true
            }
            target(product) {
                description = "Product"
            }
        }

        ProductAvailabilityProductPriceRelation(source: ProductAvailability, target: ProductPrice) {
            source(prices) {
                description = "Prices"
                containerType = Set
                associated = true
            }
            target(productAvailability) {
                description = "Product availability"
            }
        }

        ProductProductImageRelation(source: Product, target: ProductImage) {
            source(images) {
                description = "Images "
                containerType = Set
                associated = true
            }
            target(product) {
                description = "Product"
            }
        }


        StoreLocaleRelation(source: Store, target: 'Locale') {
            source(languages) {
                description = "Supported languages"
                containerType = List
            }
            target(stores) {
                containerType = List
                description = "Stores"
            }
        }

        ProductVariantProductRelation(source: Product, target: VariantProduct) {
            source(variants) {
                description = "Variants"
                containerType = Set
                associated = true
            }
            target(baseProduct) {
                description = "Base products"
            }
        }

        CategoryCategoryRelation(source: 'Category', target: 'Category') {
            source(categories) {
                description = "Categories"
                containerType = List
            }
            target(parent) {
                description = "Parent category"
            }
        }

        CategoryProductRelation(source: 'Category', target: Product) {
            source(products) {
                description = "Products"
                containerType = List
            }
            target(category) {
                description = "Category"
            }
        }

        PermissionGroupRelation(source: Permission, target: Group){
            source(groups) {
                description = "Groups"
                containerType = List
            }
            target(permissions) {
                description = "Permissions"
                containerType = Set
            }
        }

        PrincipleGroupRelation(source: Principle, target: Group){
            source(groups) {
                description = "Groups"
                containerType = List
            }
            target(users) {
                description = "Users"
                containerType = List
            }
        }

        OrderProductOrderRelation(source: OrderEntry, target: AbstractOrder){
            source(order) {
                 description = "Order"
            }
            target(entries) {
                description = "Entries"
                associated = true
                containerType = Set
            }
        }

    }

    items {

        Area {
            attributes {
                code(String)
                name(String) {
                    localized = true
                }
                center(City)
            }
        }

        Settlement {
            attributes {
                name(String) {
                    localized = true
                }
                code(String)
                population(Integer)
                longitude(Double)
                latitude(Double)
            }
        }

        City(extend: Settlement) {
            attributes {
                areaCenter(Boolean){
                    defaultValue = false
                }
                capital(Boolean){
                    defaultValue = false
                }
            }
        }

        DeliveryService(abstract: true) {
            attributes {
                code(String) {
                    optional=false
                    unique=true
                }
                name(String) {
                    localized = true
                }
                image(String)
                active(Boolean) {
                    defaultValue = true
                }
            }
        }

        DeliveryType(abstract: true) {
            attributes {
                code(String) {
                    optional=false
                    unique=true
                }
                name(String) {
                    localized = true
                }
                active(Boolean) {
                    defaultValue = true
                }
            }
        }

        Zone {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                name(String)
            }
        }

        Currency {
            attributes {
                supported(Boolean){
                    defaultValue=true
                }
                code(String){
                    unique = true
                    optional = false
                }
                symbol(String)
                name(String)
            }
        }

        Address {
            attributes {
                addressLine1(String)
                addressLine2(String)
                city(String)
                postalCode(String)
                country(Country)
                zone(Zone)
                state(String)
                phone(String)
                lastName(String)
                firstName(String)
                longitude(String)
                latitude(String)
            }
        }

        Store {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                name(String)
                phone(String)
                address(Address)
                domainName(String)
                storeEmail(String)
                dateBusinessSince(String)
                defaultLanguage('Locale')
                zone(Zone)
                country(Country)
                currency('Currency')
             }
        }

        Manufacturer {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                image(String)
                url(String)
                store(Store)
                name(String){
                    localized = true
                }
                title(String){
                    localized = true
                }
                description(String){
                    localized = true
                }
            }
        }


        Principle(abstract: true) {
            attributes {
                password(String)
                email(String)
                firstName(String)
                lastName(String)
                language('Locale')
                active(Boolean) {
                    defaultValue = true
                }
                store(Store)
            }
        }

        User (extend: Principle) {
            attributes {
                login(String)
                lastAccess(Date)
                loginTime(Date)
            }
        }

        Customer (extend: Principle) {
            attributes {
                dateOfBirth(Date)
                anonymous(Boolean){
                    defaultValue = false
                }
                defaultLanguage('Locale')
                billing(Address)
                delivery(Address)
            }
        }

        Group {
            attributes {
                groupName(String){
                    unique = true
                }
                groupType(GroupType)
            }
        }

        Permission {
            attributes {
                permissionName(String)
            }
        }

        Category {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                metaTitle(String){
                    localized = true
                }
                metaKeywords(String){
                    localized = true
                }
                metaDescription(String){
                    localized = true
                }
                name(String){
                    localized = true
                }
                title(String){
                    localized = true
                }
                description(String){
                    localized = true
                }
                visible(Boolean){
                    defaultValue = true
                }
                store(Store)
            }
        }

        AbstractOrder(abstract: true) {
            attributes {
                lastModified(Date)
                total(BigDecimal)
                currency('Currency')
                store(Store)
                customer(Customer)
                locale('Locale')
            }
        }

        Order(extend: AbstractOrder, table: false) {
            attributes {
                status(OrderStatus)
                datePurchased(Date)
                orderDateFinished(Date)
                customerAgreement(Boolean)
                confirmedAddress(Boolean)
            }
        }

        Cart(extend: AbstractOrder, table: false){
            attributes {
            }
        }

        OrderEntry {
            attributes {
                product(VariantProduct)
                quantity(Integer)
                calculated(Boolean){
                    defaultValue = false
                }
                price(BigDecimal)
                totalPrice(BigDecimal)
            }
        }

        AbstractProduct(abstract: true) {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                name(String){
                    localized = true
                }
                title(String){
                    localized = true
                }
                description(String){
                    localized = true
                }
                available(Boolean){
                    defaultValue = true
                }
                metaTitle(String){
                    localized = true
                }
                metaKeywords(String){
                    localized = true
                }
                metaDescription(String){
                    localized = true
                }
                manufacturer(Manufacturer)
                store(Store)
            }
        }

        VariantProduct(extend:Product, table:false, abstract: true) {
            attributes {
                forSale(Boolean)
                productLength(BigDecimal)
                productWidth(BigDecimal)
                productHeight(BigDecimal)
                productWeight(BigDecimal)
                productOrdered(Integer)
            }
        }

        SizeVariantProduct(extend:StyleVariantProduct, table:false) {
            attributes {
                size(String){
                    localized = true
                }
            }
        }

        StyleVariantProduct(extend:VariantProduct, table:false) {
            attributes {
                style(StyleDescription)
            }
        }

        StyleDescription {
            attributes {
                cssColorCode(String)
                styleName(String){
                    localized = true
                }
                multiColor(Boolean){
                    defaultValue = false
                }
            }
        }

        Product(extend:AbstractProduct, table:false) {
            attributes {
                dateAvailable(Date)
                productShippable(Boolean){
                    defaultValue = true
                }
                preOrder(Boolean){
                    defaultValue = false
                }
            }
        }

        ProductImage {
            attributes {
                productImage(String)
                defaultImage(Boolean){
                    defaultValue = false
                }
                imageType(Integer)
                imageCrop(Boolean){
                    defaultValue = false
                }
                altTag(String){
                    localized = true
                }
                name(String){
                    localized = true
                }
                title(String){
                    localized = true
                }
                description(String){
                    localized = true
                }
                productImageUrl(String)
            }
        }

        ProductPrice {
            attributes {
                code(String){
                    unique = true
                    optional = false
                }
                name(String){
                    localized = true
                }
                title(String){
                    localized = true
                }
                description(String){
                    localized = true
                }
                productPriceAmount(BigDecimal)
                productPriceSpecialStartDate(Date)
                productPriceSpecialEndDate(Date)
                productPriceSpecialAmount(BigDecimal)
                defaultPrice(Boolean){
                    defaultValue = false
                }

            }
        }

        ProductAvailability {
            attributes {
                productQuantity(Integer)
                productDateAvailable(Date)
                region(String)
                regionVariant(String)
                productStatus(Boolean)
                productIsAlwaysFreeShipping(Boolean){
                    defaultValue = false
                }
                productQuantityOrderMin(Integer)
                productQuantityOrderMax(Integer)
            }
        }
    }

    enums {

        GroupType {
            admin
            customer
        }

        OrderStatus {
            ordered
            processed
            delivered
            refunded
            canceled
        }
    }
}